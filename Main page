public class Main {
    public static void main(String[] args) {
            new MainPage();
        }


    }

import javax.swing.*;
import javax.swing.border.EtchedBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class MainPage extends JFrame implements ActionListener {
    JFrame frame;
    JLabel label;
    JButton button;
    JLabel label1;
    JButton button1;
    JLabel label2;
    JButton button2;
    JLabel label3;
    JButton button3;
    JLabel label4;

    ImageIcon icon = new ImageIcon("C:\\Users\\Kanish Kannan\\Downloads\\online-library (2).png");
    MainPage(){
        //intiation of object
        frame = new JFrame();
        label = new JLabel();
        label1 = new JLabel();
        button1 = new JButton("Click Here");
        button2 = new JButton("Click Here");
        button3 = new JButton("Click Here");
        JPanel panel = new JPanel();
        panel.setLayout(null);
        panel.setBackground(Color.green);
        panel.setBounds(0, 200, 400, 400);
        //button for lending book option
        button = new JButton("Click here");
        button.addActionListener(this);
        button.setEnabled(true);
        button.setBounds(400,100,100,50);
        button.setFocusable(false);
        button.setBorder(new EtchedBorder());
        button.setBackground(Color.BLUE);
        button.setHorizontalAlignment(JButton.CENTER);
        button.setVerticalAlignment(JButton.CENTER);
        panel.add(button);
        //header label
        label.setBounds(0,0,200,600);
        label.setFont(new Font("Berlin Sans FB",Font.BOLD,37));
        label.setForeground(Color.black);
        label.setBackground(Color.green);
        label.setText("Library Management System");
        label.setVerticalAlignment(JLabel.CENTER);
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setIcon(icon);
        //label for lending book
        label1.setBounds(200,100,400,50);
        label1.setFont(new Font("Arial",Font.BOLD,25));
        label1.setText("Lend Book ::");
        panel.add(label1);
        //search button all option
        button1.addActionListener(this);
        button1.setEnabled(true);
        button1.setBounds(400,200,100,50);
        button1.setFocusable(false);
        button1.setBorder(new EtchedBorder());
        button1.setBackground(Color.BLUE);
        button1.setHorizontalAlignment(JButton.CENTER);
        button1.setVerticalAlignment(JButton.CENTER);
        panel.add(button1);
        
        label3= new JLabel();
        label3.setBounds(200,300,400,50);
        label3.setFont(new Font("Arial",Font.BOLD,25));
        label3.setText("Search Book ::");
        panel.add(label3);
        //return book all option
        button2.addActionListener(this);
        button2.setEnabled(true);
        button2.setBounds(400,300,100,50);
        button2.setFocusable(false);
        button2.setBorder(new EtchedBorder());
        button2.setBackground(Color.BLUE);
        button2.setText("Click Here");
        button2.setHorizontalAlignment(JButton.CENTER);
        button2.setVerticalAlignment(JButton.CENTER);
        panel.add(button2);

        label2= new JLabel();
        label2.setBounds(200,200,400,50);
        label2.setFont(new Font("Arial",Font.BOLD,25));
        label2.setText("Return Book ::");
        panel.add(label2);
        //Create student all option
        button3.addActionListener(this);
        button3.setEnabled(true);
        button3.setBounds(400,400,100,50);
        button3.setFocusable(false);
        button3.setBorder(new EtchedBorder());
        button3.setBackground(Color.BLUE);
        button3.setText("Click Here");
        button3.setHorizontalAlignment(JButton.CENTER);
        button3.setVerticalAlignment(JButton.CENTER);
        panel.add(button3);

        label4= new JLabel();
        label4.setBounds(200,400,400,50);
        label4.setFont(new Font("Arial",Font.BOLD,25));
        label4.setText("Register Student ::");
        panel.add(label4);
        
        // main frame 
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setSize(800,600);
        frame.setVisible(true);
        frame.setLayout(new BorderLayout());
        frame.setBackground(Color.GREEN);
        frame.add(label,BorderLayout.NORTH);
        frame.add(panel,BorderLayout.CENTER);

    }
    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == button){
            new AddBook();
        }
        else if (e.getSource() == button1){
            new ReturnBook();
        }
        else if (e.getSource() == button2){
            new Searchbook();
        }
        else if(e.getSource() == button3){
            new StudentRegister();
        }
    }
}

import javax.swing.*;
import javax.swing.border.LineBorder;
import java.awt.event.ActionEvent;

import java.awt.*;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;

import static java.awt.SystemColor.text;

public class AddBook extends JFrame implements ActionListener {

    AddBookVerfication f = new AddBookVerfication();
    JFrame frame2;
    JTextField text1;
    JTextField text2;
    JTextField text3;
    JPanel panel;
    JPanel panel1;
    JPanel panel2;
    JLabel label1;
    JLabel label2;
    JLabel label3;
    JButton button;
    JPanel panel3;
    JButton button1;
    JPanel panel4;

    AddBook(){
        button = new JButton("SUBMIT");
        button.setPreferredSize(new Dimension(100,30));
        button.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button.setBorder(new LineBorder(Color.black,5));
        button.setFocusable(false);
        button.addActionListener(this);

        button1 = new JButton("Back");
        button1.setPreferredSize(new Dimension(100,30));
        button1.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button1.setBorder(new LineBorder(Color.black,5));
        button1.setFocusable(false);
        button1.addActionListener(this);

        panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel4.setBounds(0,0,100,100);
        panel4.add(button1);


        text1 = new JTextField();
        text2 = new JTextField();
        text3 = new JTextField();

        label1 = new JLabel();
        label2 = new JLabel();
        label3 = new JLabel();

        label1.setBounds(50,0,50,20);
        label1.setText("Enter your name");
        label1.setFont(new Font("Times New Roman", Font.BOLD, 25));



        text1.setPreferredSize(new Dimension(200,30));
        text1.setVisible(true);
        text1.setBackground(Color.cyan);
        text1.setFont(new Font("Nunito Sans",Font.BOLD,30));


        panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.LEFT));
        panel.setBounds(0,0,100,100);
        panel.add(label1);
        panel.add(text1);

        label2.setBounds(50,0,100,20);
        label2.setText("Enter The Book Name");
        label2.setFont(new Font("Times New Roman", Font.BOLD, 25));



        text2.setPreferredSize(new Dimension(200,30));
        text2.setVisible(true);
        text2.setBackground(Color.cyan);
        text2.setFont(new Font("Nunito Sans",Font.BOLD,30));


        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.LEFT));
        panel1.setBounds(0,0,100,100);
        panel1.add(label2);
        panel1.add(text2);

        label3.setBounds(50,0,100,20);
        label3.setText("Lending Book");
        label3.setFont(new Font("Times New Roman", Font.BOLD, 25));
        panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel2.setBounds(0,0,100,100);
        panel2.add(label3);




        panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel3.add(button);


        frame2 = new JFrame();
        frame2.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame2.setSize(800,600);
        frame2.setVisible(true);
        frame2.setLayout(new GridLayout(6,1));
        frame2.add(panel2);
        frame2.add(panel);
        frame2.add(panel1);
        frame2.add(panel3);
        frame2.add(panel4);

    }
    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == button) {
            if((text1.getText().isEmpty())||text2.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter  valid input", "Notification", JOptionPane.WARNING_MESSAGE);
            }else {
                boolean t = f.AddBookFunction1(text1.getText(), text2.getText());
                if (t) {
                    new AddBookFunction(text1.getText(), text2.getText(),frame2);
                }
            }
        }
        if(e.getSource() == button1) {
            frame2.dispose();
        }

    }
}

import javax.swing.*;
import java.sql.*;
import java.util.Random;

public class AddBookFunction {
    AddBookFunction(String s,String s1,JFrame frame){
        int reg_no;
        Random ran = new Random();
        reg_no = ran.nextInt(100);
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);


        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement st = con.createStatement();
            Statement st1 = con.createStatement();
            Statement st2 = con.createStatement();
            ResultSet rs = st.executeQuery("select id_number from student_details where Student_name ='"+s+"';");
            ResultSet rs1 = st1.executeQuery("select book_no from book_info where book_name ='"+s1+"';");
            st2.execute("update book_info set availaibility = False where book_name ='"+s1+"';");
            rs.next();
            rs1.next();
            int b = JOptionPane.showConfirmDialog(null,"Book availiable.do you want to lend it ?","Notification",JOptionPane.YES_NO_OPTION);
            if(b==JOptionPane.YES_OPTION) {

                st.execute("insert into  book_register(reg_no,student_no,book_no,date_of_lending) values(" + (reg_no + 1) + "," + rs.getInt(1) + "," + rs1.getInt(1) + ",'" + date + "');");
                JOptionPane.showMessageDialog(null, "Successful:Transaction Id :"+(reg_no+1), "Notification", JOptionPane.PLAIN_MESSAGE);
            }
            else{
                frame.dispose();
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error occurred: "+e.getMessage(), "Notification", JOptionPane.PLAIN_MESSAGE);
        }catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error occurred: "+e.getMessage(), "Notification", JOptionPane.PLAIN_MESSAGE);
        }

    }
}

import javax.swing.*;
import java.sql.*;
import java.util.Objects;

public class AddBookVerfication {
    public boolean AddBookFunction1(String s, String s1) {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement st = con.createStatement();
            Statement st1 = con.createStatement();
            ResultSet rs = st.executeQuery("select id_number from student_details where Student_name ='" + s + "';");
            ResultSet rs1 = st1.executeQuery("select book_no,availaibility from book_info where book_name ='" + s1 + "';");
            rs.next();
            rs1.next();
            if ((rs.getInt(1) > 0) && (rs1.getInt(1) > 0)) {
                if ((rs1.getBoolean(2))) {
                    return true;

                } else {
                    JOptionPane.showMessageDialog(null, "Book not available", "Notification", JOptionPane.WARNING_MESSAGE);
                    return false;



                }

            }


        } catch (SQLException e) {
            System.out.println(e.getMessage());

        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }
        JOptionPane.showMessageDialog(null, "Register to access this section", "Notification", JOptionPane.WARNING_MESSAGE);
        return false;



    }
}

import javax.swing.*;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ReturnBook extends JFrame implements ActionListener {
    JFrame frame2;
    JTextField text1;
    JTextField text2;
    JTextField text3;
    JPanel panel;
    JPanel panel1;
    JPanel panel2;
    JLabel label1;
    JLabel label2;
    JLabel label3;
    JButton button;
    JButton button1;
    JPanel panel4;
    JPanel panel3;
    ReturnBook(){
        button = new JButton("SUBMIT");
        button.setPreferredSize(new Dimension(100,30));
        button.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button.setBorder(new LineBorder(Color.black,5));
        button.setFocusable(false);
        button.addActionListener(this);

        button1 = new JButton("Back");
        button1.setPreferredSize(new Dimension(100,30));
        button1.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button1.setBorder(new LineBorder(Color.black,5));
        button1.setFocusable(false);
        button1.addActionListener(this);

        panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel4.setBounds(0,0,100,100);
        panel4.add(button1);

        text1 = new JTextField();


        label1 = new JLabel();
        label2 = new JLabel();

        label2.setBounds(0,0,50,20);
        label2.setText("Returning Book");
        label2.setFont(new Font("Times New Roman", Font.BOLD, 25));

        panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel1.setBounds(0,0,100,100);
        panel1.add(label2);




        label1.setBounds(0,0,50,20);
        label1.setText("Enter the transaction id ");
        label1.setFont(new Font("Times New Roman", Font.BOLD, 25));



        text1.setPreferredSize(new Dimension(200,30));
        text1.setVisible(true);
        text1.setBackground(Color.cyan);
        text1.setFont(new Font("Nunito Sans",Font.BOLD,30));


        panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.LEFT));
        panel.setBounds(0,0,100,100);
        panel.add(label1);
        panel.add(text1);





        panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel3.add(button);


        frame2 = new JFrame();
        frame2.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame2.setSize(800,600);
        frame2.setVisible(true);
        frame2.setLayout(new GridLayout(6,1));
        frame2.add(panel1);
        frame2.add(panel);
        frame2.add(panel3);
        frame2.add(panel4);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        RegisterTableValidation t = new RegisterTableValidation();


        if(e.getSource() == button){
            if(text1.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter valid input", "Notification", JOptionPane.WARNING_MESSAGE);
            }
            else{
                int i;
                i = Integer.parseInt(text1.getText());
                if(t.validate(i)) {
                    new ReturnbookTable(text1.getText());
                }
                else {
                    JOptionPane.showMessageDialog(null, "Record not found", "Notification", JOptionPane.WARNING_MESSAGE);
                }
            }

        }
        if(e.getSource() == button1){
            frame2.dispose();
        }

    }
}

import java.sql.*;

public class RegisterTableValidation {
    public boolean validate(int  t) {
        int u = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select reg_no from book_register;");

            while (rs.next()) {
                int c = rs.getInt(1);
                if (c == t){
                    u +=1;
                }



            }
        }catch(SQLException e){
                System.out.println(e.getMessage());

        } catch(ClassNotFoundException e){
                System.out.println(e.getMessage());
        }
        if (u >0){
            return true;
        }else {

            return false;
        }
    }
}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;




public class ReturnbookTable extends JFrame implements ActionListener {
    JFrame frame = new JFrame();
    JTable table = new JTable();
    JScrollPane scroll ;
    JButton button = new JButton("Confirm");
    static String a;
    JPanel panel = new JPanel();
    JPanel panel1 = new JPanel();
    JButton button1 = new JButton("Back");
    JPanel panel2 = new JPanel();
    ReturnbookTable(String s){
        try {
            table = new JTable();
            a=s;



            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from book_register where reg_no='"+s+"';");
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int cols = rsmd.getColumnCount();
            String[] colname = new String[cols];
            for (int i = 0; i < cols; i++) {
                colname[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colname);

            while (rs.next()) {
                String reg_no = rs.getString(1);
                String student_no = rs.getString(2);
                String book_no = rs.getString(3);
                String date_lending = rs.getString(4);
                String date_return = rs.getString(5);
                String[] row = {reg_no, student_no, book_no, date_lending, date_return};
                model.addRow(row);
            }
        } catch (Exception x) {
            System.out.println(x);
        }
        button = new JButton("Confirm");
        button.setPreferredSize(new Dimension(100,30));
        button.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button.setBorder(new LineBorder(Color.black,5));
        button.setFocusable(false);
        button.addActionListener((ActionListener) this);

        button1.setPreferredSize(new Dimension(100,30));
        button1.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button1.setBorder(new LineBorder(Color.black,5));
        button1.setFocusable(false);
        button1.addActionListener((ActionListener) this);

        panel1.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel2.add(button1);

        panel.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel.add(button);



        frame.setSize(new Dimension(800,800));
        scroll = new JScrollPane(table);
        scroll.setPreferredSize(new Dimension(800,300));
        scroll.setEnabled(true);

        panel1.add(scroll);


        frame.setLayout(new GridLayout(3,1));
        frame.setVisible(true);
        frame.add(panel1);
        frame.add(panel);
        frame.add(panel2);




    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == button) {
            long millis = System.currentTimeMillis();
            java.sql.Date date = new java.sql.Date(millis);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/lms", "root", "root");
                Statement stmt = con.createStatement();
                Statement s = con.createStatement();
                ResultSet rs = s.executeQuery("select Date_of_return from book_register where reg_no="+a+";");
                rs.next();
                if(rs.getString("Date_of_return")== null){
                    stmt.execute("update book_register set Date_of_return = '"+date+"' where ( reg_no ="+a+");");
                    JOptionPane.showMessageDialog(null, "Successful", "Notification", JOptionPane.PLAIN_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Book already returned", "Notification", JOptionPane.WARNING_MESSAGE);

                }


            } catch (Exception x) {
                System.out.println(x.getMessage());
            }
        }
        if (e.getSource() == button1) {
            frame.dispose();
        }

    }
}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.border.MatteBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
public class Searchbook extends JFrame implements ActionListener {
    JFrame frame;
    JPanel panel;
    JPanel panel2;
    JPanel panel3;
    JButton button;
    JLabel label;
    JLabel label1;
    JLabel label2;
    JTextField text;
    JTextField text1;
    JPanel panel5;
    JLabel label3;
    JPanel panel6;
    JPanel panel7;
    JButton button1;
    JPanel panel8;
    JButton button2;
    JPanel panel9;
    Searchbook(){
        panel = new JPanel();
        panel2 = new JPanel();
        panel3 = new JPanel();
        panel6 = new JPanel();
        panel5 = new JPanel();
        panel7 = new JPanel();
        panel8 = new JPanel();
        panel9 = new JPanel();

        button = new JButton();
        button1 = new JButton();
        button2 = new JButton();
        panel2 = new JPanel();
        label = new JLabel();
        label1 = new JLabel();
        label2 = new JLabel();
        label3 = new JLabel();

        button1.setText("Back");
        button1.setPreferredSize(new Dimension(100,30));
        button1.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button1.setBorder(new LineBorder(Color.black,5));
        button1.setFocusable(false);
        button1.addActionListener(this);

        button2.setText("view all");
        button2.setPreferredSize(new Dimension(100,30));
        button2.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button2.setBorder(new LineBorder(Color.black,5));
        button2.setFocusable(false);
        button2.addActionListener(this);

        panel8.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel8.add(button1);

        panel9.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel9.add(button2);



        //Header of data entering panel
        label2.setText("Search book" );
        label2.setFont(new Font("Times New Roman", Font.BOLD, 30));
        label3.setFont(new Font("Times New Roman", Font.BOLD, 15));

        panel6.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel6.add(label3);

        panel7.setLayout(new FlowLayout(FlowLayout.CENTER));
        panel7.add(label2);

        //data entering sub panel-1
        panel2.setLayout(new FlowLayout(FlowLayout.LEFT));

        label.setText("Enter Book name");
        label.setFont(new Font("Times New Roman", Font.BOLD, 30));

        text = new JTextField();
        text.setFont(new Font("Times New Roman", Font.BOLD, 30));
        text.setBorder(new MatteBorder(1,1,1,1,Color.GREEN));
        text.setPreferredSize(new Dimension(100,30));


        panel2.add(label);
        panel2.add(text);

        //data entering sub panel -2
        panel3.setLayout(new FlowLayout(FlowLayout.LEFT));

        label1.setText("Enter Author name");
        label1.setFont(new Font("Times New Roman", Font.BOLD, 30));

        text1 = new JTextField();
        text1.setFont(new Font("Times New Roman", Font.BOLD, 30));
        text1.setBorder(new MatteBorder(1,1,1,1,Color.GREEN));
        text1.setPreferredSize(new Dimension(100,30));

        panel3.add(label1);
        panel3.add(text1);

        //button sub panel
        panel5.setLayout(new FlowLayout(FlowLayout.CENTER));

        button.setText("Search");
        button.setPreferredSize(new Dimension(100,30));
        button.setFont(new Font("Times New Roman",Font.BOLD,20) );
        button.setBorder(new LineBorder(Color.black,5));
        button.setFocusable(false);
        button.addActionListener(this);

        panel5.add(button);





        //data entering panel
        panel.setBounds(0,0,800,400);
        panel.setLayout(new GridLayout(7,1));
        panel.add(panel7);
        panel.add(panel6);
        panel.add(panel2);
        panel.add(panel3);
        panel.add(panel5);
        panel.add(panel9);
        panel.add(panel8);


        //table panel




        //frame
        frame = new JFrame();
        frame.setSize(800,800);
        frame.setVisible(true);
        frame.setBackground(Color.cyan);
        frame.setLayout(null);
        frame.add(panel);



    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == button){
            if((text.getText().isBlank())&&(text1.getText().isBlank())){
                JOptionPane.showMessageDialog(null, "Enter valid input", "Notification", JOptionPane.WARNING_MESSAGE);
            }
            else{
                if (text1.getText().isBlank()) {

                    new Table2(text.getText());
                } else if (text.getText().isBlank()){
                    JOptionPane.showMessageDialog(null, "Error has occurred", "Notification", JOptionPane.PLAIN_MESSAGE);
                }
                else {
                    new Table3(text.getText(), text1.getText());
                }
            }
        }
        if (e.getSource() == button2){
            new Table1();
        }
        if (e.getSource() == button1){
            frame.dispose();
        }
    }
}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

public class Table1  {
    JFrame frame = new JFrame();
    JTable table = new JTable();
    JScrollPane scroll ;
    Table1(){
        try {
            table = new JTable();

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from book_info;");
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int cols = rsmd.getColumnCount();
            String[] colname = new String[cols];
            for (int i = 0; i < cols; i++) {
                colname[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colname);

            while (rs.next()) {
                String no = rs.getString(1);
                String book_no = rs.getString(2);
                String book_name = rs.getString(3);
                String author_name = rs.getString(4);
                String[] row = {no, book_no, book_name, author_name};
                model.addRow(row);
            }
        } catch (Exception x) {
            System.out.println(x);
        }


        frame.setSize(new Dimension(800,800));
        scroll = new JScrollPane(table);
        scroll.setEnabled(true);
        frame.add(scroll);
        frame.pack();
        frame.setVisible(true);


    }


}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;



public class Table2  {
    JFrame frame = new JFrame();
    JTable table = new JTable();
    JScrollPane scroll ;

    Table2(String s) {
        try {
            table = new JTable();

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from book_info where book_name ='"+s+"';");
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int cols = rsmd.getColumnCount();
            String[] colname = new String[cols];
            for (int i = 0; i < cols; i++) {
                colname[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colname);

            while (rs.next()) {
                String no = rs.getString(1);
                String book_no = rs.getString(2);
                String book_name = rs.getString(3);
                String author_name = rs.getString(4);
                String[] row = {no, book_no, book_name, author_name};
                model.addRow(row);
            }
        } catch (Exception x) {
            System.out.println(x);
        }


        frame.setSize(new Dimension(800,800));
        scroll = new JScrollPane(table);
        scroll.setEnabled(true);
        frame.add(scroll);
        frame.pack();
        frame.setVisible(true);

    }


}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

public class Table3  {
    Frame frame = new JFrame();
    JTable table = new JTable();
    JScrollPane scroll ;

    Table3(String n,String m){
        try {
            table = new JTable();

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from book_info where author_name = ' "+ m + "' or book_name = '" + n + "';");
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int cols = rsmd.getColumnCount();
            String[] colname = new String[cols];
            for (int i = 0; i < cols; i++) {
                colname[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colname);

            while (rs.next()) {
                String no = rs.getString(1);
                String book_no = rs.getString(2);
                String book_name = rs.getString(3);
                String author_name = rs.getString(4);
                String[] row = {no, book_no, book_name, author_name};
                model.addRow(row);
            }
        } catch (Exception x) {
            System.out.println(x);
        }


        frame.setSize(new Dimension(800,800));
        scroll = new JScrollPane(table);
        scroll.setEnabled(true);
        frame.add(scroll);

        frame.pack();
        frame.setVisible(true);
    }


}

import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;

public class Table3  {
    Frame frame = new JFrame();
    JTable table = new JTable();
    JScrollPane scroll ;

    Table3(String n,String m){
        try {
            table = new JTable();

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/lms", "root", "root");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from book_info where author_name = ' "+ m + "' or book_name = '" + n + "';");
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            int cols = rsmd.getColumnCount();
            String[] colname = new String[cols];
            for (int i = 0; i < cols; i++) {
                colname[i] = rsmd.getColumnName(i + 1);
            }
            model.setColumnIdentifiers(colname);

            while (rs.next()) {
                String no = rs.getString(1);
                String book_no = rs.getString(2);
                String book_name = rs.getString(3);
                String author_name = rs.getString(4);
                String[] row = {no, book_no, book_name, author_name};
                model.addRow(row);
            }
        } catch (Exception x) {
            System.out.println(x);
        }


        frame.setSize(new Dimension(800,800));
        scroll = new JScrollPane(table);
        scroll.setEnabled(true);
        frame.add(scroll);

        frame.pack();
        frame.setVisible(true);
    }


}



